{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f1\froman\fcharset2\fprq2 Symbol;}{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \b\f4\fs40 \sbasedon0\snext16 API Title;}{\s16\widctlpar \f4 
\sbasedon0\snext16 API Description;}{\s17\widctlpar \f11\fs22 \sbasedon0\snext17 API Function;}{\s18\widctlpar \b\f4 \sbasedon0\snext16 API Section;}{\s19\li720\widctlpar \f4 \sbasedon0\snext16 API Parameter Description;}{\s20\widctlpar \i\f4 
\sbasedon0\snext19 API Parameter Name;}{\s21\widctlpar \f4\fs20 \sbasedon0\snext21 footnote text;}{\*\cs22 \additive\super \sbasedon10 footnote reference;}}{\info{\author Mike O'Brien}{\operator Mike O'Brien}{\creatim\yr1996\mo8\dy21\hr16\min23}
{\revtim\yr1996\mo10\dy3\hr15\min10}{\version2}{\edmins0}{\nofpages1}{\nofwords182}{\nofchars1042}{\*\company Blizzard Entertainment}{\vern57431}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd \linex0\endnhere {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\keepn\widctlpar \b\f4\fs40 {\cs22\super ${\footnote \pard\plain \s21\widctlpar \f4\fs20 {\cs22\super $} SNetSendTurn}#{\footnote \pard\plain 
\s21\widctlpar \f4\fs20 {\cs22\super #} SNetSendTurn}K{\footnote \pard\plain \s21\widctlpar \f4\fs20 {\cs22\super K} SNetSendTurn}} SNetSendTurn
\par \pard\plain \s16\widctlpar \f4 
\par Sends out the next turn for this computer.  The turn must be received on the local machine and all other machines in the game using SNetReceiveTurns().
\par 
\par Typically, a game will send a turn as soon as it is generated (for example, as soon a
s the user performs an action), and then receive turns at a specific rate, such as two turns per second.  By sending turns as soon as they are generated, rather than sending only two turns per second, the game ensures that turns are given as much time as 
possible to travel over the wire.  However, it is also important for the game to ensure that it has always sent more turns than it has processed, to ensure that there are always turns on the wire.  The game can accomplish this by checking the number of tu
rns in transit, using SNetGetTurnsInTransit(), before calling SNetReceiveTurns().
\par 
\par \pard\plain \s17\widctlpar \f11\fs22 BOOL SNetSendTurn (
\par \tab LPVOID\tab data,
\par \tab DWORD\tab \tab databytes
\par );
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Parameters
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 data
\par \pard\plain \s19\li720\widctlpar \f4 A pointer to the turn data.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 databytes
\par \pard\plain \s19\li720\widctlpar \f4 The size of the turn data, in bytes.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Return Value
\par \pard\plain \s16\widctlpar \f4 
\par This function returns TRUE for success or FALSE for failure.  The function can fail if:
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s16\fi-360\li360\widctlpar{\*\pn \pnlvlblt\pnf1\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}No network provider has been initialized
\par {\pntext\pard\plain\f1 \'b7\tab}No game has been created or joined
\par {\pntext\pard\plain\f1 \'b7\tab}No data pointer was provided
\par {\pntext\pard\plain\f1 \'b7\tab}The size of the turn is zero
\par {\pntext\pard\plain\f1 \'b7\tab}The system is out of memory
\par \pard\plain \widctlpar \f4\fs20 
\par }