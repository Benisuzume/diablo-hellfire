{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f1\froman\fcharset2\fprq2 Symbol;}{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \b\f4\fs40 \sbasedon0\snext16 API Title;}{\s16\widctlpar \f4 
\sbasedon0\snext16 API Description;}{\s17\widctlpar \f11\fs22 \sbasedon0\snext17 API Function;}{\s18\widctlpar \b\f4 \sbasedon0\snext16 API Section;}{\s19\li720\widctlpar \f4 \sbasedon0\snext16 API Parameter Description;}{\s20\widctlpar \i\f4 
\sbasedon0\snext19 API Parameter Name;}{\s21\li720\widctlpar \f11 \sbasedon19\snext21 API Callback;}{\s22\widctlpar \f4\fs20 \sbasedon0\snext22 footnote text;}{\*\cs23 \additive\super \sbasedon10 footnote reference;}}{\info{\author Mike O'Brien}
{\operator Mike O'Brien}{\creatim\yr1996\mo8\dy21\hr16\min19}{\revtim\yr1996\mo10\dy3\hr19\min16}{\version2}{\edmins1}{\nofpages1}{\nofwords178}{\nofchars1020}{\*\company Blizzard Entertainment}{\vern57431}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade 
\fet0\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\keepn\widctlpar \b\f4\fs40 {\cs23\super ${\footnote \pard\plain \s22\widctlpar 
\f4\fs20 {\cs23\super $} SNetEnumProviders}#{\footnote \pard\plain \s22\widctlpar \f4\fs20 {\cs23\super #} SNetEnumProviders}K{\footnote \pard\plain \s22\widctlpar \f4\fs20 {\cs23\super K} SNetEnumProviders}} SNetEnumProviders
\par \pard\plain \s16\widctlpar \f4 
\par Enumerates all network providers installed on the system.  The callback function you provide is called once for each provider.  If desired, you can specify a minimum set of capabilities, and only providers which meet or exceed those capabilities will be r
eturned.
\par 
\par Rather than calling this function manually, an application will generally call SNetSelectProvider() to present the user with a list of network providers and allow him to select and initialize one.
\par 
\par \pard\plain \s17\widctlpar \f11\fs22 BOOL SNetEnumProviders (
\par \tab SNETCAPSPTR\tab \tab \tab mincaps,
\par \tab SNETENUMPROVIDERSPROC\tab \tab callback
\par );
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Parameters
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 mincaps
\par \pard\plain \s19\li720\widctlpar \f4 
A pointer to an SNETCAPS structure specifying the minimum capabilities required of network providers.  The size field must be filled in which the size of the structure.  Any other field can contain a number to specify a minimum capability, or zero to spec
ify that the field should be ignored.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s19\li720\widctlpar \f4 If the mincaps parameter is NULL, all network providers are enumerated.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 callback
\par \pard\plain \s19\li720\widctlpar \f4 The application\rquote s callback function.  See EnumProvidersProc() for a description.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Return Value
\par \pard\plain \s16\widctlpar \f4 
\par This function returns TRUE for success or FALSE for failure.  The function can fail if:
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s16\fi-360\li360\widctlpar{\*\pn \pnlvlblt\pnf1\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}No callback function is provided
\par {\pntext\pard\plain\f1 \'b7\tab}The size field of the SNETCAPS structure is invalid
\par \pard\plain \widctlpar \f4\fs20 
\par }