{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f1\froman\fcharset2\fprq2 Symbol;}{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \b\f4\fs40 \sbasedon0\snext16 API Title;}{\s16\widctlpar \f4 
\sbasedon0\snext16 API Description;}{\s17\widctlpar \f11\fs22 \sbasedon0\snext17 API Function;}{\s18\widctlpar \b\f4 \sbasedon0\snext16 API Section;}{\s19\li720\widctlpar \f4 \sbasedon0\snext16 API Parameter Description;}{\s20\widctlpar \i\f4 
\sbasedon0\snext19 API Parameter Name;}{\s21\widctlpar \f4\fs20 \sbasedon0\snext21 footnote text;}{\*\cs22 \additive\super \sbasedon10 footnote reference;}}{\info{\author Mike O'Brien}{\operator Mike O'Brien}{\creatim\yr1996\mo8\dy21\hr16\min23}
{\revtim\yr1996\mo10\dy3\hr15\min10}{\version2}{\edmins0}{\nofpages1}{\nofwords77}{\nofchars443}{\*\company Blizzard Entertainment}{\vern57431}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd \linex0\endnhere {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\keepn\widctlpar \b\f4\fs40 {\cs22\super ${\footnote \pard\plain \s21\widctlpar \f4\fs20 {\cs22\super $} SNetUnregisterEventHandler}#{\footnote 
\pard\plain \s21\widctlpar \f4\fs20 {\cs22\super #} SNetUnregisterEventHandler}K{\footnote \pard\plain \s21\widctlpar \f4\fs20 {\cs22\super K} SNetUnregisterEventHandler}} SNetUnregisterEventHandler
\par \pard\plain \s16\widctlpar \f4 
\par This removes a given function from the list of registered event handlers.
\par 
\par \pard\plain \s17\widctlpar \f11\fs22 BOOL SNetUnregisterEventHandler (
\par \tab DWORD\tab \tab \tab eventid,
\par \tab SNETEVENTPROC\tab callback
\par );
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Parameters
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 eventid
\par \pard\plain \s19\li720\widctlpar \f4 The event ID for which the handler was registered.  See SNetRegisterEventHandler() for a list of event IDs.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 callback
\par \pard\plain \s19\li720\widctlpar \f4 A pointer to the event handler function.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Return Value
\par \pard\plain \s16\widctlpar \f4 
\par This function returns TRUE for success or FALSE for failure.  The function can fail if:
\par {\pntext\pard\plain\f1 \'b7\tab}\pard \s16\fi-360\li360\widctlpar{\*\pn \pnlvlblt\pnf1\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}An invalid event ID was specified
\par {\pntext\pard\plain\f1 \'b7\tab}No callback function was provided
\par \pard\plain \widctlpar \f4\fs20 
\par }