{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\widctlpar \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \b\f4\fs40 \sbasedon0\snext16 API Title;}{\s16\widctlpar \f4 \sbasedon0\snext16 API Description;}{\s17\widctlpar 
\f11\fs22 \sbasedon0\snext17 API Function;}{\s18\widctlpar \b\f4 \sbasedon0\snext16 API Section;}{\s19\li720\widctlpar \f4 \sbasedon0\snext16 API Parameter Description;}{\s20\widctlpar \i\f4 \sbasedon0\snext19 API Parameter Name;}{\s21\widctlpar \f4\fs20 
\sbasedon0\snext21 footnote text;}{\*\cs22 \additive\super \sbasedon10 footnote reference;}}{\info{\title SNetCreateGame}{\author Mike O'Brien}{\operator Mike O'Brien}{\creatim\yr1996\mo8\dy21\hr16\min18}{\revtim\yr1996\mo11\dy22\hr18\min12}{\version3}
{\edmins6}{\nofpages1}{\nofwords172}{\nofchars981}{\*\company Blizzard Entertainment}{\vern57431}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \s15\keepn\widctlpar \b\f4\fs40 {\cs22\super ${\footnote \pard\plain \s21\widctlpar \f4\fs20 {\cs22\super $} GetDataProc}#{\footnote \pard\plain \s21\widctlpar \f4\fs20 {\cs22\super #} GetDataProc}K{\footnote 
\pard\plain \s21\widctlpar \f4\fs20 {\cs22\super K} GetDataProc}} GetDataProc 
\par \pard\plain \s16\widctlpar \f4 
\par {\b\i GetDataProc() is a placeholder for an application-defined function name.}
\par 
\par This function can be called by a network provider to get data other than artwork from the current application.  To get artwork, a network provider calls GetArtProc().
\par 
\par \pard\plain \s17\widctlpar \f11\fs22 BOOL CALLBACK GetDataProc (
\par \tab DWORD\tab \tab \tab providerid,
\par \tab DWORD\tab \tab \tab dataid,
\par \tab LPVOID\tab \tab buffer,
\par \tab DWORD\tab \tab \tab buffersize,
\par \tab DWORD\tab \tab \tab *bytesused
\par );
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Parameters
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 providerid
\par \pard\plain \s19\li720\widctlpar \f4 The ID of the network provider which is requesting the artwork.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 dataid
\par \pard\plain \s19\li720\widctlpar \f4 The ID of the data item being requested.  There are no predefined IDs.  Network providers can define their own IDs, above 0x80000000, for data that is specific to the provider.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 buffer
\par \pard\plain \s19\li720\widctlpar \f4 A pointer to a buffer where the function should copy the data.  This parameter can be NULL if the provider is only querying the data size.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 buffersize
\par \pard\plain \s19\li720\widctlpar \f4 The size of the buffer pointed to by {\i buffer}.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s20\widctlpar \i\f4 bytesused
\par \pard\plain \s19\li720\widctlpar \f4 A pointer to a variable which the function should fill in with the number of bytes written to the buffer.  If the buffer is NULL, the function should fill in the total number of bytes in the data item.
\par \pard\plain \s16\widctlpar \f4 
\par \pard\plain \s18\widctlpar \b\f4 Return Value
\par \pard\plain \s16\widctlpar \f4 
\par This function should return TRUE if the data ID is valid and can be provided, or FALSE otherwise.
\par }