#ifndef __RASMGR_H
#define __RASMGR_H

/****************************************************************************
*
*  Session Management Functions
*
***/

// CALLBACK FOR EnumActiveRASConnections(). THE LPVOID RASHADLE
// PARAMETER SHOULD BE STORED AS AN OPAQUE POINTER AND PASSED
// TO HangupRASConnection(). THE FUNCTION SHOULD RETURN TRUE
// TO CONTINUE THE ENUMERATION, FALSE TO CANCEL.
typedef BOOL (APIENTRY *LPRASENUMCALLBACK)(LPCTSTR szEntryName,
                                           LPVOID rashandle,
                                           LPVOID lpContext);

// INITIALIZES RAS MANAGER - CALL ONE TIME *BEFORE* DIALING
BOOL WINAPI InitRASManager();

// RETURNS THE NUMBER OF ACTIVE RAS CONNECTIONS
DWORD WINAPI GetNumActiveRASConnections();

// ENUMERATES ALL *ACTIVE* DIALUP CONNECTIONS. RETURN OF TRUE
// INDICATES THAT 0 - N CONNECTIONS WERE SUCCESSFULLY ENUMERATED,
// I.E. RETURN OF 0 DOES NOT INDICATE NO ACTIVE CONNECTIONS.
BOOL WINAPI EnumActiveRASConnections(LPRASENUMCALLBACK lpCallback,
                                     LPVOID lpContext);

// ENUMERATES ALL ACTIVE DIALUP CONNECTIONS THAT HAVE BEEN
// ESTABLISHED AFTER THE CALL TO InitRASManager(). RETURN OF TRUE
// INDICATES THAT 0 - N CONNECTIONS WERE SUCCESSFULLY ENUMERATED,
// I.E. RETURN OF 0 DOES NOT INDICATE NO ACTIVE CONNECTIONS.
BOOL WINAPI EnumNewRASConnections(LPRASENUMCALLBACK lpCallback,
                                  LPVOID lpContext);

// HANGS UP LINE. THIS FUNCTION WILL BLOCK UNTIL THE TAPI STATE
// MACHINE MANAGING THE COMM PORT HAS CLEANED UP THE PORT
BOOL WINAPI HangupRASConnection(LPVOID rashandle);

#endif // __RASMGR_H
